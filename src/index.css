@import "tailwindcss";

/* Montserrat */
@import url("https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;700&display=swap");

/* Teknaf Regular */
@font-face{
  font-family:"Teknaf";
  src:url("/src/assets/fonts/TeknafRegular-rv0aB.otf") format("opentype");
  font-weight:400; font-style:normal; font-display:swap;
}

/* Palette (optional JS uses these) */
:root{
  --blue-900:#00072d;
  --blue-800:#051650;
  --blue-700:#0a2472;
  --blue-600:#123499;
  --blue-500:#1a43bf;
}

/* Fonts */
html,body{ font-family:Montserrat,ui-sans-serif,system-ui; }
.h-display{ font-family:"Teknaf", Montserrat, sans-serif; }

/* ======= ONLY the shared animation keyframes (no global grid classes!) ======= */
@keyframes grid-pan {
  0%   { background-position: 0 0, 0 0, 0 0, 0 0; }
  50%  { background-position: 32px 16px, 16px 32px, 64px 32px, 32px 64px; }
  100% { background-position: 0 0, 0 0, 0 0, 0 0; }
}

/* Solid dark card that blocks grid entirely */
.card-solid-dark {
  background-color: #0b1220;              /* opaque, deep navy */
  border: 1px solid rgba(255,255,255,.08);
  border-radius: 16px;
  box-shadow: 0 10px 30px rgba(0,0,0,.35);
}

/* “Frosted” look but still hides grid with an inner cover */
.card-frosted {
  position: relative;
  backdrop-filter: blur(8px);
  border-radius: 16px;
  border: 1px solid rgba(255,255,255,.10);
  overflow: hidden;
}
.card-frosted::before {
  content: "";
  position: absolute; inset: 0;
  /* this cover stops the grid from showing through */
  background: rgba(8, 12, 20, .85);       /* tweak to taste */
  pointer-events: none;
}

/* Card surface (keeps background grid out) */
.card-dark-neutral {
  background-color: #0f1115;               /* charcoal */
  border: 1px solid rgba(255,255,255,.06);
  border-radius: 16px;
  box-shadow: 0 8px 24px rgba(0,0,0,.40);
}

/* Optional micro grids that live INSIDE the card only */
.card-grid-soft {
  background-image:
    linear-gradient(rgba(255,255,255,.03) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255,255,255,.03) 1px, transparent 1px);
  background-size: 20px 20px;
  background-blend-mode: normal;
}

.card-grid-strong {
  background-image:
    linear-gradient(rgba(255,255,255,.06) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255,255,255,.06) 1px, transparent 1px);
  background-size: 20px 20px;
  background-blend-mode: normal;
}

/* Optional: animate the card grid very gently */
@keyframes cardGridPan {
  0%   { background-position: 0 0, 0 0; }
  50%  { background-position: 10px 10px, -10px 0; }
  100% { background-position: 0 0, 0 0; }
}
.card-grid-animate { animation: cardGridPan 18s linear infinite; }



/* Utilities */
.noise{
  pointer-events:none;
  background-image:url("data:image/svg+xml;utf8,\
<svg xmlns='http://www.w3.org/2000/svg' width='120' height='120'>\
<filter id='n'><feTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='2' stitchTiles='stitch'/>\
<feColorMatrix type='saturate' values='0'/>\
<feComponentTransfer><feFuncA type='table' tableValues='0 0 0 0 0.08 0.12 0.16 0.18 0.2 0.22 0.24 0.26 0.28 0.3 0.3 0.3'/></feComponentTransfer></filter>\
<rect width='100%' height='100%' filter='url(%23n)'/></svg>");
  opacity:.15; mix-blend-mode:soft-light;
}

.btn-shine{ position:relative; overflow:hidden; }
.btn-shine::after{
  content:""; position:absolute; inset:0; translate:-120% 0;
  background:linear-gradient(90deg,transparent,rgba(255,255,255,.35),transparent);
  transition:translate .6s ease;
}
.btn-shine:hover::after{ translate:120% 0; }

.shine{ position:relative; overflow:hidden; }
.shine::after{
  content:""; position:absolute; inset:-150% -50% auto auto; width:40%; height:300%;
  transform:rotate(20deg);
  background:linear-gradient(90deg,transparent,rgba(255,255,255,.18),transparent);
  animation:sweep 4s linear infinite;
}
@keyframes sweep{ to{ inset:-150% auto auto -50%; } }
